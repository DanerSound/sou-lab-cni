- name: installa podman
  hosts: all
  become: true
  vars:
    ansible_ssh_pass: vagrant
  tasks:
    - name: Disable SELinux
      selinux:
        state: disabled
    - name: Update yum cache
      yum:
        update_cache: 'yes'
    - name: Install Podman
      yum:
        state: present
        name: podman
- name: Install Haproxy using Podman on Soufe1
  hosts: soufe1
  become: true
  vars:
    ansible_ssh_pass: vagrant
  tasks:
    - name: pull image haproxy
      podman_image:
        name: 'docker.io/haproxytech/haproxy-alpine:2.7'
    - name: stop container if exist
      shell: podman stop haproxy
      ignore_errors: true
    - name: remove container if exist
      shell: podman rm haproxy
      ignore_errors: true
    - name: Create haproxy config directory
      ansible.builtin.file:
        path: /containers_vols/haproxy
        owner: vagrant
        group: vagrant
        state: directory
        mode: '0664'
    - name: update haproxy config
      ansible.builtin.copy:
        src: ../templates/haproxy.j2
        dest: /containers_vols/haproxy/haproxy.cfg
        owner: vagrant
        group: vagrant
        mode: '0664'
    - name: Run haproxy
      containers.podman.podman_container:
        name: haproxy
        image: 'docker.io/haproxytech/haproxy-alpine:2.7'
        ports:
          - '8080:80'
        volumes:
          - '/containers_vols/haproxy/:/usr/local/etc/haproxy:ro'
        state: started
- name: Install Grafana and Prometheus using Podman on Soube2
  hosts: soube2
  become: true
  vars:
    ansible_ssh_pass: vagrant
  tasks:
    - name: pull image grafana
      containers.podman.podman_image:
        name: grafana/grafana
        pull: true
        tag: latest
    - name: stop container if exist
      shell: podman stop grafana
      ignore_errors: true
    - name: remove container if exist
      shell: podman rm grafana
      ignore_errors: true
    - name: run grafana container
      shell: >-
        podman run -d --name=grafana -p 3000:3000
        docker.io/grafana/grafana:latest
    - name: pull image Prometheus
      containers.podman.podman_image:
        name: bitnami/prometheus
        pull: true
        tag: latest
    - name: stop container if exist
      shell: podman stop prometheus
      ignore_errors: true
    - name: remove container if exist
      shell: podman rm prometheus
      ignore_errors: true
    - name: run prometheus container
      shell: 'podman run -d --name prometheus -p 9090:9090 bitnami/prometheus'
